@import '../../../static/css/functions';
@import '../../../static/css/mixins';
@import '../../../static/css/resets';
@import '../../../static/css/variables';

// Example: Interpolation
// See t.ly/QMEc
// Could put in a _config.scss file
$colors: (
    "primary": blue,
    "secondary": green,
);
// Could put in a _function.scss file
@function color($key) {
    @if not map-has-key($colors, key) {
        @warn "Key `#{key}` not found in $colors map.";
    }
    @return map-get($colors, $key);
}
// Could put in an _component.scss file
.el {
    background-color: color(secondary);
}
// End example

body {
    background: $primary-color;
    color: $text-color;
}

.main {
    @include flexCenter(row);

    width: 80%;
    margin: 0 auto;
    // Don't do too much nesting.  Better to build reusable styles.

    // Use & instead of repeating ".main".  "&" = the parent.
    // Use interpolation too so you get ".main .main__paragraph" instead of just ".main__paragraph".
    //.main__paragraph {
    #{&}__paragraph1 {
        font-weight: weight(bold);

        &:hover {
            color: pink;
        }
    }

    // Inherit styles from paragraph1 but make a few minor changes
    #{&}__paragraph2 {
        @extend .main__paragraph1;

        &:hover {
            color: $accent-color;
        }
    }


    // This substitutes for a media query.
    @include mobile {
        flex-direction: column;
    }
}

.light {
    @include theme($light-theme: true);
}

.dark {
    @include theme($light-theme: false);
}